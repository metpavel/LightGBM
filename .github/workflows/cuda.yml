name: CUDA GitHub Actions

on:
  push:
    branches:
    - test2

jobs:
  test:
    name: CUDA
    runs-on: [self-hosted, linux]
    timeout-minutes: 60
    strategy:
      fail-fast: false
    steps:
      - name: Setup software on host machine
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
              curl \
              wget \
              git \
              apt-transport-https \
              ca-certificates \
              curl \
              gnupg-agent \
              software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y
          curl -sL https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
          curl -sL https://nvidia.github.io/nvidia-docker/$(. /etc/os-release;echo $ID$VERSION_ID)/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
              docker-ce \
              docker-ce-cli \
              containerd.io \
              nvidia-docker2
          sudo systemctl restart docker
      - name: Cleanup
        run: sudo rm -rf $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 5
          submodules: true
      - name: Test CUDA
        run: |
            cat > .env <<EOF
            TASK=cuda
            COMPILER=gcc
            GITHUB_ACTIONS=true
            OS_NAME=linux
            BUILD_DIRECTORY=/LightGBM
            CONDA_ENV=test-env
            EOF
            cat > docker-script.sh <<EOF
            export CONDA=$HOME/miniconda
            export PATH=$CONDA/bin:$HOME/.local/bin:$PATH
            apt-get update
            apt-get install --no-install-recommends -y curl wget
            curl -sL https://cmake.org/files/v3.18/cmake-3.18.1-Linux-x86_64.sh -o cmake.sh
            chmod +x cmake.sh
            ./cmake.sh --prefix=/usr/local --exclude-subdir
            rm cmake.sh
            nvidia-smi
            /LightGBM/.ci/setup.sh || exit -1
            /LightGBM/.ci/test.sh || exit -1
            EOF
            cat docker-script.sh | sudo docker run --env-file .env -v "$GITHUB_WORKSPACE":"/LightGBM" --rm --gpus all nvidia/cuda:11.0-devel-ubuntu20.04 /bin/bash
